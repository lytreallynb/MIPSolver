name: Build Wheels

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install CMake (Windows)
      if: runner.os == 'Windows'
      uses: crazy-max/ghaction-chocolatey@v3
      with:
        args: install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Install CMake (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Install CMake (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools pybind11

    - name: Build wheel
      run: python -m build --wheel
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 4

    - name: Test wheel installation
      run: |
        pip install dist/*.whl
        python -c "import mipsolver; print('MIPSolver imported successfully!')"

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/*.whl

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all wheels
      uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Flatten wheel directory
      run: |
        mkdir -p wheelhouse
        find dist -name "*.whl" -exec cp {} wheelhouse/ \;
        ls -la wheelhouse/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: wheelhouse/
